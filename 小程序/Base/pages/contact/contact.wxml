<view class="divider"></view>
<!-- 列表 -->
<view class="cell">
    <navigator class="cell-item arrow">
        <text>表单文本框</text>
    </navigator>
    <!-- 根据输入类型不同会调用不同的输入键盘 -->
    <view class="cell-item ">
        <input type='text' placeholder='普通文本'></input>
    </view>
    <view class="cell-item ">
       <input type='text'  password placeholder='密码'></input>
    </view>
      <view class="cell-item ">
       <input type="number" placeholder='数字'></input>
    </view>

       <view class="cell-item ">
       <input type="idcard" placeholder='身份证'></input>
    </view>

</view>
<view class="cell">
    <navigator class="cell-item arrow">
        <text>其他</text>
    </navigator>
    <view class="cell-item arrow">
    <checkbox-group>
        <checkbox color="red">1 </checkbox>
        <checkbox color="black"> 2</checkbox>
    </checkbox-group>
        
    </view>
     <view class="cell-item arrow">
     <!-- 通过编组确定唯一性 通过bindchange事件绑定函数获取值
        可以在绑定事件的 currentTarget >dataset 中获取自定义的 data-index="myIndex" 值
     -->
     <radio-group bindchange="radioChangeHandle" data-index="myIndex">
        <radio color="red" value="1">天</radio>
        <radio color="black" value="2">地</radio>
     </radio-group>       
    </view>

    <view class="cell-item arrow">
      <switch></switch> 
        <switch color="#f60" checked></switch>  
    </view>
</view>
<view class="divider"></view>
<view class="cell">
  <view class="cell-item arrow">
        <text>微信小程序事件</text>
    </view>
    <view class="father" bindtap="fatherTapHandle">
        爸爸
        <!--  <view class="son" catchtap="sonTapHandle">可以阻止事件冒泡 -->
        <!-- 通过自定义属性data-i="1"传递参数后台在event>target>dataset对象中通过index获取属性值 -->
        <view class="son" bindtap="sonTapHandle" data-index="1">
        儿子
        </view>
    </view>
</view>


<!-- wxml -->
<wxs module="foo">
var sum=function(a,b){
    return a+b;
}
var back={
    a:1,
    b:2,
    sumfunc:sum
}
//导出对象可以直接在界面上使用 -->
module.exports.expObj=back;
</wxs>
<view>{{foo.expObj.a}}</view>
<view>{{foo.expObj.b}}</view>
<view>{{foo.expObj.sumfunc(2,2)}}</view>
